{% extends "layout.html.twig" %}

{% block data_params %}
  {{ global.html_data_params({
    aurl: url('createUserProcessActivity', { inpId: 0 })|raw
  }) }}
{% endblock %}

{% block title %}
  {{ 'iprocesses.title'|trans }}
{% endblock title %}

{% set actNameTruncVal = 13 %}



{% set actStatuses = 
  { 'o' : {
        '-5' : 'cancelled',
        '-4' : 'discarded', 
        '-3' : 'requested',
        '-2' : 'attributed',
        '-1' : 'incomplete',
        '0' : 'future',
        '1' : 'current',
        '2' : 'completed',
        '3' : 'published',
        },
    'p' : {
        '-5' : 'stopped',
        '-4' : 'postponed', 
        '-3' : 'suspended',
        '-2' : 'reopened',
        '-1' : 'unstarted',
        '0' : 'upcoming',
        '1' : 'ongoing',
        '2' : 'completed',
        '3' : 'finalized',
    }
  }
  %}

{% block css %}
  <link rel="stylesheet" href="{{ asset('css/activity_list_item.css') }}">
  <link rel="stylesheet" href="{{ asset('css/iprocess_list.css') }}">
  <link rel="stylesheet" href="{{ asset('css/dropify.min.css') }}">
  <script>
    var ipurl = "{{ url('getAllProcessesFromInstitution',{orgId : 0}) }}";
    var gcurl = "{{ url('getElementConfig', {entity:'activity', elmtId : 0}) }}";
    var gsurl = "{{ url('getGradableStages', {actId : 0}) }}";
    var aurl = "{{ url('createUserProcessActivity', { inpId: 0 }) }}";
    var adurl = "{{ url('activityDelegate') }}";
    var adeleteUrl="{{ url('ajaxActivityDelete', {'actId' : 0}) }}";
    var usurl= "{{ url('updateStageStatus', {stgId : 0}) }}";
    var cpurl = "{{ url('createProcessRequest', {orgId : currentuser.organization.id}) }}";
    var eurl = "{{ url('updateEvent', {eveId : 0}) }}";
  </script>
  <style>
      .elmts{
        background-color: #f1f1f1;
        border-radius: 3px;
      }
      .stage-detail-container{
        display: flex;
        height: 100%;
        padding: 0;
      }

      .stage{
        margin: 0em 1em;
      }

      .stage:not(:last-of-type){
        border-bottom: 1px solid #0002;
      }

      .stage:last-of-type>.stage-detail-container{
        padding-bottom: 2rem;
      }

      .stage-container--main > section {
        flex: 1;
        overflow: auto;
        padding: 0 2rem;
      }
      .stage-detail-container > section:not(:last-of-type) {
        border-right: thin solid #0002;
      }

      .cn-icon {
        width: 15px;
      }

      .cn-icon::before {
        content: attr(data-icon);
        font-family: "Font Awesome 5 Free";
        font-weight: 900;
        margin-right: .25em;
      }

      .output>.title, .participants>.title {
        font-size: 1.2em;
      }

      .output>.title>i, .participants>.title>i {
        margin-right: 5px;
        padding-bottom: 0.5em;
      }

      .readiness{
        font-size:0.8em;
      }

      .no-picture{
        background-color: grey;
        width: 1.3em;
        height: 1.3em;
        display: inline-block;
        text-align: center;
        border-radius: 100%;
        color: white;
      }

      .stage{
        position: relative;
      }

      .stage-duration{
        width: 50%;
      }

      .stage-dates, .stage-duration, .grading-duration{
        display: flex;
      }

      .grading-duration{
        margin-left: 1rem;
      }
      .stage-duration i, .grading-duration i{
        margin-right: 5px;
      }

      .stage-dates{
        padding: 0 1rem;
      }

      .stage-progress{
        position: absolute;
        right:0;
        line-height: 30px;
      }

      .stage-progress>.btn-flat:first-of-type{
        cursor: unset;
      }

      .stage-name{
        margin : 10px 0px;
        font-size: 1.2em;
      }

      .output{
        width: 50%;
      }

      .elmts>.activity{
        padding-top: 0.5em;
        margin: 1em 0em;
        position: relative;
      }

      .activity-name{
        margin: 2rem 1rem 0 1rem;
        font-size: 1.2em;
      }

      .activity-master-user{
        font-size: 14px;
        margin-left: auto;
      }

      .initialize-modal-title{
        display: inline-block;
        margin-left: 20px;
      }

      .ip-info{
        position: absolute;
        right: 0%;
      }

      .ip-info>a{
        cursor: pointer;
        display: inline-flex;
        align-items: center;
      }

      .ip-info>a, .activity-name>i{
        margin-right: 5px;
      }

      section{
        padding: 0 1rem;
        margin: 1rem 0;
      }

      #updateStageProgressStatus, #createActivity, #requestNewProcess{
        overflow-y: unset;
      }

      .nb-completed-stages{
        margin: 1em;
      }

      .sorting-type{
        padding: 0 3em;
        justify-content: flex-end;
      }

      .sorting-type .btn-flat, .sorting-type .btn-flat>i{
        color : #26a69a;
        font-size: 12px;
      }
      .sorting-type .btn-flat:last-of-type{
        padding-left : 7px;
      }

      .sorting-type-value, .change-status-type{
        color : #00acc1;
      }

      #sortingTypeSelector{
        display: none;
      }

      .act-team-participant i{
        font-size: 0.9rem;
      }
      .view-type{
        padding: 0 3em;
        justify-content: flex-end;
      }

      .view-type>.btn-flat, .view-type>.btn-flat>i{
        color : #26a69a;
        font-size: 12px;
      }
      .view-type>.btn-flat:last-of-type{
        padding-left : 7px;
      }
      #viewTypeSelector{
        display: none;
      }
      .view-settings{
        flex-direction: column;
        align-items: flex-end;
      }
      .change-view-type, .change-status-type, .change-date-type{
        display: flex;
        flex-direction: column;
      }
      .change-view-type>i, .change-status-type>i, .change-date-type>i{
        line-height: 10px;
      }

      .client-logo {
        --size: 1.2em;
        font-size: var(--size);
        height: 1em;
        width: 1em;
        border: 1.5px solid #e0e0e0;
        margin-right: .25em;
      }

      ol.simult.stages{
        --button-size:1em;
      }

      ol.stages:not(.simult){
        --button-size:1.3em;
      }

      ol.stages::before{
        z-index: 0;
      }

      ol.stages{
        position: relative;
      }

      ol.stages.past-period{
        z-index: 1;
      }

      .simult{
        flex-direction: column;
      }

      .simult > li{
        margin-top: 0.25rem;
        margin-bottom: 0.25rem;
      }

      .process-list--item{
        border-bottom: 1px dashed black;
        padding: 0.5rem 0;
      }

      .process-detail{
        justify-content: center;
      }

      .months-ref{
        position: relative;
      }

      .months-ref .col{
        text-align: center;
      }

      .past-period,.ongoing-period {
        position: relative;
      }

      .stages.simult .s-day {
        position: absolute;
        left: -1rem;
        top: -0.3rem;
        font-size: 10px;
      }

      .stages.simult .e-day {
        position: absolute;
        right: -1rem;
        top: -0.3rem;
        font-size: 10px;
      }
      .stages:not(.simult) .s-day {
        position: absolute;
        left: 0%;
        top: 7px;
        font-size: 14px;
      }

      .stages:not(.simult) .e-day {
        position: absolute;
        right: 0%;
        bottom: 7px;
        font-size: 14px;
      }

      .stages:not(.simult) .single-date{
        right: calc(var(--button-size) * -1/5);
        top: calc(var(--button-size) * -1);
      }

      .stages.simult .single-date{
        left: -2.5rem;
        top: -0.4rem;
      }

      .stages:not(.simult) .m-days{
        width: 50px;
        right: -1.5rem;
      }

      .stages-holder{
        display: flex;
        flex-direction: column;
        justify-content: center;
        min-height: 52px;
        border-bottom: 1px dashed lightgray;
      }

      .fixed-action-btn ul{
        bottom: calc(var(--button-size) * 0.7);
        left: calc(var(--button-size) * -0.4);
        min-width: 50px;
      }

      .fixed-action-btn ul > li > a{
        background-color: #1976D2;
      }

      .fixed-action-btn ul > li > a:hover{
        background-color: white;
      }

      .fixed-action-btn ul > li > a > i:hover{
        color: #1976D2;
      }
      .insert-document-btn, .insert-comment-btn{
        background-color: #00acc1;
      }


      .tabs-t-view{
        height: 48px;
        justify-content: center;
        text-align: center;
      }

      .tabs-t-view,.modified-fixed-btn{
          --button-size:1.3em;
          --strike-width: .2em;
      }

      .act-info{
         --button-size: .7em;
         --strike-width: .35em;
      }

      .tabs-t-view > li{
        -webkit-box-flex: 1;
        flex-grow: 1;
        text-transform: uppercase;
        font-size: 14px;
        justify-content: center;
      }

      .tabs-t-view li.incomplete.showable .stage-item-button{
        background-color: orange;
      }

      .tabs-t-view li.current.showable .stage-item-button{
        background-color: #16AFB7;
      }

      .tabs-t-view li.completed.showable .stage-item-button{
        background-color:#4CAF50;
      }

      .modified-fixed-btn{
        display:inline-block;
      }

      .nb-stages{
        font-size: 15px;
      }

      .timescale{
        position: -webkit-sticky; /* Safari */
        position: sticky;
        top: 0;
        background-color: white;
        z-index: 2;
      }

      .act-info{
        position: relative;
      }

      .act-info > .fixed-action-btn{
        position: absolute;
        right: calc(100% + 0.7rem);
      }
      
      .modified-fixed-btn ul{
        text-align: right;
        margin-right: 2.5rem;
        top: 50%;
        -webkit-transform: translateY(-50%);
        transform: translateY(-50%);
        height: 3rem;
        left: auto;
      }

      .modified-fixed-btn ul li{
        margin: 0px 15px 0 0;
        display: inline-block;
      }

      .multiple-stages{
        background-color: white;
        border: 1px solid black;
        position: absolute;
        top: -0.5rem;
        left: calc(50% - 0.5rem);
        padding: 2px;
        line-height: 11px;
        z-index: 1;
        font-size: 15px;
      }

      .participants-t-holder, .criteria-t-holder{
        flex-direction: column;
        justify-content: flex-start;
      }

      .t-users-barred, .t-fb-barred{
        left: 0.2rem;
        top:0.1rem;
        color: red;
      }

      .t-stage-info{
        justify-content: space-between;
      }

      .t-stage-dates{
        font-size: 13px;
      }

      .act-action-button{
        border : calc(var(--button-size) / 2) solid 
      }

      .event-action-buttons{
        margin-top: 20px
      }

      .event-notifications-header, .event-dates-header{
        color: #00acc1;
        cursor: pointer;
      }


  </style>
{% endblock %}

{% block javascripts %}
  <script>

    const $processSelect = $('#processSelect');
    const $createActivityModal = $('#createActivity');
    const $requestProcessModal = $('#requestNewProcess');
    const $sortingTypeSelector = $('#sortingTypeSelector');
    const $viewTypeSelector = $('#viewTypeSelector');
    async function onAddProcessClick(_institutionId) {
      const url = ipurl.replace(0, _institutionId);
      institutionId = _institutionId;
      $concernedProcessSelects = $('#requestNewProcess select, #processSelect');
      $('.red-text').remove();
      const response = await fetch(url);
      const json = await response.json();
      newOptions = [];
      $.each(json.processes, function(key, process){
          newOptions.push(`<option value="${process.key}" ${process.disabled}>${process.value}</option>`);
          $.each(process.children, function(key, child){
              newOptions.push(`<option class="option-child" value="${child.key}" ${child.disabled}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;${child.value}</option>`);
              $.each(child.children, function(key, subchild){
                  newOptions.push(`<option class="option-subchild" value="${subchild.key}" ${subchild.disabled}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;${subchild.value}</option>`);
              })
          })
      })

      // /** @type {[]} */
      // const options = json.processes.map(
      //  process => /*html*/`<option value="${process.key}">${process.value}</option>`,
      // );

      newOptions.unshift('<option value="0">({% trans %}processes.unrelated{% endtrans %})</option>');  
      $concernedProcessSelects.each(function(i,e){
        $(e).empty().html(newOptions.join('')).material_select();
      })  
    }

    $('#initializedActivity').find('select[name*="activityLeader"]').material_select();

    $('.change-view-type').on('click',function(){
        document.cookie = `view_type=${$(this).data('type') == "d" ? "t" : "d"}`;
        window.location = window.location;
    })
    $('.change-status-type').on('click',function(){
        document.cookie = `sorting_type=${$(this).data('type') == "o" ? "p" : "o"}`;
        window.location = window.location;
    })

    $('.sorting-type .fas').on('click',function(){
      $(this).hide();
      $('.view-type-value>span').hide();
      $viewTypeSelector.material_select();
    });

    $('#viewTypeSelector').on('change',function(){
      if($(this).val() != $(this).find('option[selected]').val()){
        document.cookie = "view_type="+$(this).val()+"";
        window.location = window.location;
      }
    })
    $('.delegate-button').on('click',function(e){
      e.preventDefault();
      $('.error-msg').empty();
      $btn = $(this);
      $('.del-act-name').find('input[name*="activityName"]').val($btn.closest('.modal').find('input[name="activity_name"]').val());
      $('.del-act-name').show();
      const serializedForm = $(this).closest('form').serialize();
      $('.del-act-name').hide();
      $.post(adurl, serializedForm)
      .done(function(data){
        $('#initializedActivity').modal('close');
        $('#delegateSuccess').modal('open');
      })
      .fail(function(data){
        errorHtmlMsg = '';
        $(data.responseJSON).each((i,e) => errorHtmlMsg +='<strong>'+Object.values(e)[0]+'</strong>')
        $('#errorModal').find('.error-msg').append($(errorHtmlMsg));
        $('#errorModal').modal('open');
      })

    })

    $('.update-status-btn').on('click',function(){
        urlToPieces = usurl.split('/');
        sid = $(this).data('sid');
        urlToPieces[urlToPieces.length - 3] = sid;
        url = urlToPieces.join('/');
        const params = {status: $('#progressStatusSelect').val()};
          $.post(url,params)
            .done(function(data){
                $triggerEl = $(`[href="#updateStageProgressStatus"][data-sid="${sid}"]`);
                $triggerEl.data('progress',+$('#progressStatusSelect').val());
                if($('#progressStatusSelect').val() == -2){
                  $triggerEl.data('r', 1);
                }
                $(`[href="#updateStageProgressStatus"][data-sid="${sid}"]`).prev().find('.stage-progress-status-name').empty().append($('#progressStatusSelect option:selected').text());
                $('#updateStageProgressStatus').modal('close');
            })
            .fail(function(data){

            })
    })

    $(document).on('click','[href="#updateStageProgressStatus"]',function(e) {

        $('.update-status-btn').data('sid',$(this).data('sid'));
        $select = $('#progressStatusSelect');
        const status = $(this).data('progress');
        const r = $(this).data('r');
        $select.empty();
        $option0 = $(`<option></option>`);
        $option1 = $(`<option></option>`);
        $option2 = $(`<option></option>`);
        $option3 = $(`<option></option>`);
        $option4 = $(`<option></option>`);

        switch($(this).data('progress')){

          case -4:
            $select.append($option0.attr('value',-5).append('{{"stages.stage.progress.stopped"|trans}}'))
              .append($option1.attr('value',-4).append('{{"stages.stage.progress.suspended"|trans}}').prop('disabled',true))
              .append($option2.attr('value',0).append('{{"stages.stage.progress.upcoming"|trans}}'))
              .append($option3.attr('value',1).append('{{"stages.stage.progress.ongoing"|trans}}'))
              .append($option4.attr('value',2).append('{{"stages.stage.progress.completed"|trans}}').prop('selected',true));break;
          case -3:
            $select.append($option0.attr('value',-5).append('{{"stages.stage.progress.stopped"|trans}}'))
              .append($option1.attr('value',2).append('{{"stages.stage.progress.completed"|trans}}').prop('disabled',true).prop('selected',true));break;
          case -2:
            $select.append($option0.attr('value',-2).append('{{"stages.stage.progress.reopened"|trans}}').prop('disabled',true).prop('selected',true))
              .append($option1.attr('value',2).append('{{"stages.stage.progress.completed"|trans}}'));
              if(r){
                $select.append($option2.attr('value',3).append('{{"stages.stage.progress.finalized"|trans}}'));
              }
              break;
          case 0:
            $select.append($option0.attr('value',-5).append('{{"stages.stage.progress.stopped"|trans}}'))
              .append($option1.attr('value',-3).append('{{"stages.stage.progress.suspended"|trans}}'))
              .append($option2.attr('value',0).append('{{"stages.stage.progress.upcoming"|trans}}').prop('disabled',true))
              .append($option3.attr('value',1).append('{{"stages.stage.progress.ongoing"|trans}}').prop('selected',true))
              .append($option4.attr('value',2).append('{{"stages.stage.progress.completed"|trans}}'));break;
          case 1:
            $select.append($option0.attr('value',-5).append('{{"stages.stage.progress.stopped"|trans}}'))
              .append($option1.attr('value',-3).append('{{"stages.stage.progress.suspended"|trans}}'))
              .append($option2.attr('value',1).append('{{"stages.stage.progress.ongoing"|trans}}').prop('disabled',true))
              .append($option3.attr('value',2).append('{{"stages.stage.progress.completed"|trans}}').prop('selected',true));break;
          case 2:
            $select.append($option0.attr('value',-2).append('{{"stages.stage.progress.reopened"|trans}}'))
              .append($option1.attr('value',1).append('{{"stages.stage.progress.ongoing"|trans}}'))
              .append($option2.attr('value',2).append('{{"stages.stage.progress.completed"|trans}}').prop('disabled',true).prop('selected',true));break;
        };
        $select.material_select();
    })



    $('.final-step-btn, [href="#activityInfo"]').on('click', function(e) {
      $btn = $(this);

      if($btn.hasClass('final-step-btn')){
        $elmtContainer = $('#initializedActivity .elmts');
        $idContainer = $('.modify-btn');
        eid = $('#processSelect').val();
        setTimeout(function(){
          $("#initializedActivity").scrollTop(0);
        },50);
        $('.ip-info').empty();
      } else {
        $elmtContainer = $('#activityInfo .elmts');
        $idContainer = $('#activityInfo');
        setTimeout(function(){
          $("#activityInfo").scrollTop(0);
        },50);
        eid = $btn.data('eid');
      }

      if($idContainer.attr('data-eid') != eid){

        $idContainer.attr('data-eid',eid);

        $('.activity-name').remove();
        $('#activityInfo .action-buttons').empty();
        $elmtContainer.empty();
        const $actElmt = $('<div class="activity"></div>');

        if(eid != 0){
          urlToPieces = gcurl.split('/');
          urlToPieces[urlToPieces.length - 1] = eid;
          urlToPieces[urlToPieces.length - 3] = $btn.hasClass('final-step-btn') ? 'iprocess' : 'activity';
          url = urlToPieces.join('/');
          $.post(url,null)
            .done(function(data){

                if($btn.hasClass('final-step-btn')){
                  actIPInfoHmtl = /*html*/`<div class="ip-info">
                      <a class="btn-flat no-padding">
                        <i class="material-icons">layers</i>
                        <span>${data.name}</span>
                      </a>
                      ${data.canEdit ? '<a class="btn-flat tooltipped" href="{{ url("manageActivityElement",{entity:"iprocess", elmtId: "~" }) }}" data-position="top" data-tooltip="{% trans %}processes.modify_prior_launching_act{% endtrans %}"><i class="fa fa-cog"></i></a>' : ''}
                    </div>`;
                  actIPInfoHmtl = actIPInfoHmtl.replace('~',eid);
                  const $actIPInfo = $(actIPInfoHmtl);
                  $actIPInfo.find('.tooltipped').tooltip();
                  $actElmt.append($actIPInfo);
                  $actName = $(`
                    <div class="activity-name input-field">
                      <input type="text" name="activity_name" required="required" value="${data.name}">
                      <label for="activity_name" class="active">{{ 'activities.request.name_label'|trans }}</label>
                    </div>
                  `);
                  $actElmt.append($actName);
                } else {
                  $actName =
                    $(`
                      <div class="activity-name flex-center">
                        <i class="fa fa-cube red-text"></i>
                        <span>${data.name}</span>
                        <div class="activity-master-user">
                          {%trans%} activity_elements.owner {% endtrans %} :
                          ${data.masterUserPicture ? '<img src="'+data.masterUserPicture+'"' : '<span class="no-picture">'+data.masterFNFL.toUpperCase()+'</span>'}
                          <span> ${data.masterUserFullname}</span>
                        </div>
                      </div>
                    `)
                }

                const $stgElmts = $('<div class="active-stages"></div>');
                const regExp = /~(.+)~/;
                const dateOptions = { month: 'long', day: 'numeric' };

                if(data.nbOCompletedStages > 0){
                  $oCompletedStagesElmt = $(`<div class="nb-completed-stages flex-center">
                      <ul style="display: inline-flex; color: grey; margin-right:3px" class="no-margin no-padding">
                        <li>
                          <i class="fa fa-cube" style="position: relative;top: -6%;left: 0%;font-size: 0.85rem;"></i>
                        </li>
                        <li>
                          <i class="fa fa-cube" style="position: relative;top: 6%;left: -41%;font-size: 0.85rem;"></i>
                        </li>
                      </ul>
                      <span>${data.nbOCompletedStages} ${data.nbOCompletedStages == 1 ? "{{'activities.nb_o_completed_stages_sing'|trans}}" : "{{'activities.nb_o_completed_stages_plur'|trans}}"}</span>
                    </div>`);
                  $actElmt.append($oCompletedStagesElmt);

                }


                if(data.activeStages){

                  $.each(data.activeStages, function(key,stage){

                    $stgElmt = $('<div class="stage"></div>');

                    switch(stage.progress){
                      case -5: msg='{{"stages.stage.progress.stopped"|trans}}';icon='';break;
                      case -4: msg='{{"stages.stage.progress.postponed"|trans}}';icon='';break;
                      case -3: msg='{{"stages.stage.progress.suspended"|trans}}';icon='';break;
                      case -2: msg='{{"stages.stage.progress.reopened"|trans}}';icon='';break;
                      case -1: msg='{{"stages.stage.progress.unstarted"|trans}}';icon='';break;
                      case 0: msg='{{"stages.stage.progress.upcoming"|trans}}';icon='';break;
                      case 1: msg='{{"stages.stage.progress.ongoing"|trans}}';icon='';break;
                      case 2: msg='{{"stages.stage.progress.completed"|trans}}';icon='';break;
                      case 3: msg='{{"stages.stage.progress.finalized"|trans}}';icon='';break;
                    }

                    $stageProgress = $(/**html*/`<div class="stage-progress">
                      <div class="btn-flat no-padding">
                        {% trans %}stages.stage.progress.title{% endtrans %} : <span class="stage-progress-status-name">${msg}</span>
                      </div>
                      <div class="btn-flat no-padding modal-trigger" href="#updateStageProgressStatus" data-progress="${stage.progress}" data-sid="${stage.id}" data-r="${stage.r}">
                        <i class="material-icons">create</i>
                      </div>
                    </div>`);

                    $stgElmt.append($stageProgress);

                    $stgContainer = $('<div class="stage-detail-container"></div>');

                    if(data.activeStages.length > 1 || stage.name != data.name){
                      $stgName = $(`<div class="stage-name">
                          <ul style="display: inline-flex; color: #2196F3; margin-right:3px" class="no-margin no-padding">
                            <li>
                              <i class="fa fa-cube" style="position: relative;top: -6%;left: 0%;font-size: 0.85rem;"></i>
                            </li>
                            <li>
                              <i class="fa fa-cube" style="position: relative;top: 6%;left: -41%;font-size: 0.85rem;"></i>
                            </li>
                          </ul>
                          <span>${stage.name} ${stage.activeWeight != 1 ? '(' + Math.round(100 * stage.activeWeight,2)+ ' %)' : ''}</span>
                        </div>`);
                      $stgElmt.append($stgName);
                    }

                    $datesElmt = $(`<div class="stage-dates">
                          <span class="stage-duration">
                            <i class="material-icons">access_time</i>
                            <span>{% trans %}process_stages.dates_definition.defined_duration.timespan{% endtrans %} :</span>
                            ${stage.ddates ? new Date(stage.startdate.date).toLocaleDateString('{% trans %}long_locale{% endtrans %}',dateOptions) + ' - ' + new Date(stage.enddate.date).toLocaleDateString('{% trans %}long_locale{% endtrans %}',dateOptions) : stage.dperiod + stage.dfreq }
                          </span>
                          <span class="grading-duration">
                            <i class="material-icons">send</i>
                            <span>{% trans %}process_stages.dates_definition.defined_duration.feedback{% endtrans %} :</span>
                            ${stage.ddates ? new Date(stage.gstartdate.date).toLocaleDateString('{% trans %}long_locale{% endtrans %}',dateOptions) + ' - ' + new Date(stage.genddate.date).toLocaleDateString('{% trans %}long_locale{% endtrans %}',dateOptions) : stage.fperiod + stage.ffreq }
                          </span>
                      </div>`)

                    $stgElmt.append($datesElmt);

                    if(stage.survey == null) {
                      $crtElmts = $(`<section class="output">
                      <div class="title">
                        <i class="fa fa-cubes green-text"></i>{% trans %}stages.output_type.title{% endtrans %} : {% trans %}activity_elements.criteria{% endtrans %}
                        ${stage.oReadiness ? '<i class="material-icons green-text readiness">check_circle</i>' : '<i class="material-icons orange-text readiness tooltipped" data-position="top" data-tooltip="{% trans %}activity_elements.to_configure{% endtrans %}">error</i>'}
                      </div>
                      </section>`);
                      $crtElmts.find('.tooltipped').tooltip();
                      $.each(stage.criteria, function (key, criterion) {
                        const match = criterion.icon.match(regExp);
                        const icon = String.fromCodePoint && match && match[1] ? String.fromCodePoint('0x' + match[1]) : '';
                        $crtElmt = $(/*html*/`<div class="criterion">
                            <span class="cn-icon" data-icon="${icon}" style="width:15px"></span>
                            <span>${criterion.name} (${Math.round(100 * criterion.weight, 2)} %)</span>`);
                        $crtElmts.append($crtElmt);
                      })
                    } else {
                      $crtElmts = $(`<section class="output">
                      <div class="title">
                        <i class="fa fa-cubes green-text"></i>{% trans %}stages.output_type.title{% endtrans %} : {% trans %}activity_elements.survey{% endtrans %}
                        ${stage.oReadiness ? '<i class="material-icons green-text readiness">check_circle</i>' : '<i class="material-icons orange-text readiness tooltipped" data-position="top" data-tooltip="{% trans %}activity_elements.to_configure{% endtrans %}">error</i>'}
                      </div>
                      </section>`);
                      $crtElmts.find('.tooltipped').tooltip();
                      console.log(stage.survey.name);

                        $crtElmt = $(/*html*/`<div class="survey">
                            <span class="cn-icon" style="width:15px"> Titre : `+stage.survey.name+`</span>
                        </div>`);
                        $crtElmts.append($crtElmt);
                    }

                    var currentElmts = $crtElmts;
                    const $partElmts = $(`<section class="participants">
                      <div class="title">
                        <i class="fa fa-users blue-text"></i>{% trans %}activity_elements.participants{% endtrans %}
                        ${stage.pReadiness ? '<i class="material-icons green-text readiness">check_circle</i>' : '<i class="material-icons orange-text readiness tooltipped" data-position="top" data-tooltip="{% trans %}activity_elements.to_configure{% endtrans %}">error</i>'}
                      </div>
                    </section>`);
                    $partElmts.find('.tooltipped').tooltip();
                    $.each(stage.teams,function(key,team){

                        let tooltipMsg = '';
                        $.each(team.indivs,function(key, individual){
                          tooltipMsg = tooltipMsg + individual.name + '<br>'
                        })

                        $partElmt = $(`<div class="act-team-participant">
                          ${team.img ? '<img src="'+team.img+'"' : '<span class="no-picture tooltipped" data-position="top" data-html="true" data-tooltip="'+tooltipMsg+'"><i class="fa fa-users"></i></span>'}

                          ${team.name} ${team.type == 0 ? '(T)' : (team.type == -1 ? '(P)' : '')}
                          ${team.status == 3 ? '<i class="material-icons green-text readiness">check_circle</i>' : ''}
                          </div>`);
                        $partElmt.find('.tooltipped').tooltip();
                        $partElmts.append($partElmt);
                    });
                    $.each(stage.indivs,function(key,individual){
                        $partElmt = $(`<div class="act-indiv-participant">
                          ${individual.img ? '<img src="'+individual.img+'"' : '<span class="no-picture">'+individual.fnfl.toUpperCase()+'</span>'}

                          ${individual.name} ${individual.type == 0 ? '(T)' : (individual.type == -1 ? '(P)' : '')}
                          ${individual.status == 3 ? '<i class="material-icons green-text readiness">check_circle</i>' : ''}
                          </div>`);
                        $partElmts.append($partElmt);
                    });

                    $stgContainer.append(currentElmts).append($partElmts);
                    $stgElmt.append($stgContainer);
                    $stgElmts.append($stgElmt);
                    $actElmt.append($stgElmts);

                  })
                } else {
                  $stgElmt = $(`
                    <div class="unset-process flex-center">
                      <i class="material-icons">crop_free</i>
                      <span>{% trans %}processes.unset_process{% endtrans %}</span>
                    </div>
                  `);
                  $actElmt.append($stgElmt);
                }

                //$('.elmts').before($IPName);
                $elmtContainer.append($actElmt);

                if(!$btn.hasClass('final-step-btn')){
                    $elmtContainer.before($actName);

                    if(data.canEdit){
                      $btnElmt = $('<div class="button-field"></div>');
                      editHtml = /*html*/`<a class="modal-close btn" href="{{ path('manageActivityElement', { entity: 'activity', elmtId: '~'}) }}">Modifier</a>`;
                      editHtml = editHtml.replace('~',data.id);
                      $btnElmt.append($(editHtml));
                      $('#activityInfo .action-buttons').append($btnElmt);
                    }

                    if(data.isDeletable){
                      $btnElmt = $('<div class="button-field"></div>');
                      editHtml = /*html*/`<a class="modal-trigger red btn" href="#deleteActivity" data-eid="~">Supprimer</a>`;
                      editHtml = editHtml.replace('~',data.id);
                      $btnElmt.append($(editHtml));
                      $('#activityInfo .action-buttons').append($btnElmt);
                    }

                }


                console.log(data);
            })
            .fail(function(data){
              console.log(data);
            })
        } else {
          $actName = $(`
            <div class="activity-name input-field">
              <input type="text" name="activity_name" required="required" placeholder="{{ 'activities.request.name_label'|trans }}">
              <label for="activity_name" class="active">{{ 'activities.create.activityName'|trans }}</label>
            </div>
          `);
          $actElmt.append($actName);
          $elmtContainer.append($actElmt);
        }

      }
      if($btn.hasClass('final-step-btn')){
        $('.launch-btn').data('pid',$('#processSelect').val());
        $('#initializedActivity').modal('open');
      }
    })

    $('#delegate').on('change',function(){

      $creationModal = $(this).closest('.modal');
      if($(this).is(':checked')){
          $creationModal.find('.delegate').show();
          $creationModal.find('.modal-footer').hide();
          $creationModal.find('select[name*="activityLeader"]').hide();
      } else {
          $creationModal.find('.delegate').hide();
          $creationModal.find('.modal-footer').show();
      }
    });
  </script>
  <script src="{{ asset('js/activity_manage.js') }}"></script>
  <script src="{{ asset('js/dropify.min.js') }}"></script>
{% endblock %}


{% macro process_item(p) %}
  {% set activities = p.activities %}
  {% set children = p.children %}

  <li class="process-list--item hierarchized-item"></li>
{% endmacro %}

{% block content %}
  <main>

    {% if currentuser.role == 1 %}
      <div class="modal-footer action-buttons">
        <div class="button-field">
          {% if global.route == "myActivities" %}
              <a href="{{ url('processesList') }}" class="btn-large waves-effect waves-light teal lighten-1" style="margin:20px 0px 0px 0px">{% trans %}activities.firm_activities{% endtrans %}</a>
          {% else %}
              <a href="{{ url('myActivities') }}" class="btn-large waves-effect waves-light teal lighten-1" style="margin:20px 0px 0px 0px">{% trans %}activities.my_activities{% endtrans %}</a>
          {% endif %}
        </div>
      </div>
    {% endif %}

    <div class="sorting-type flex-center">
      <ul class="flex-center view-settings">
        <li class="flex-center">
          <a class="btn-flat no-padding flex-center">
            <div class="view-type-value flex-center">
              {% if viewTypeCookie == 'd' %}
                <i class="material-icons">fiber_smart_record</i>
                <span class="sm-left sm-right">{{ 'activities.status_view_type'|trans }}</span>
              {% else %}
                <i class="material-icons">linear_scale</i>
                <span class="sm-left sm-right">{{ 'activities.timeframe_view_type'|trans }}</span>
              {% endif %}
            </div>

            <ul class="change-view-type" data-type="{{viewTypeCookie}}">
              <i class="fa fa-caret-up"></i>
              <i class="fa fa-caret-down"></i>
            </ul>
          </a>
        </li>

        {#{% if viewTypeCookie == "d" %}#}
          <li class="flex-center">
            <a class="btn-flat no-padding flex-center">
              <div class="sorting-type-value flex-center">
                {% if sortingTypeCookie == 'o' %}
                  <i class="material-icons">rate_review</i>
                  <span class="sm-left sm-right">{{ 'activities.output_sorting_type'|trans }}</span>
                {% else %}
                  <i class="material-icons">event_available</i>
                  <span class="sm-left sm-right">{{ 'activities.progress_sorting_type'|trans }}</span>
                {% endif %}
              </div>
              <ul class="change-status-type" data-type="{{sortingTypeCookie}}">
                <i class="fa fa-caret-up"></i>
                <i class="fa fa-caret-down"></i>
              </ul>
            </a>
          </li>
          {% if viewTypeCookie == 't' %}
          <li class="flex-center">
            <a class="btn-flat no-padding flex-center">
              <div class="sorting-type-value flex-center">
                  <i class="material-icons" {% if dateTypeCookie != 's' %}style="display:none"{% endif %}>settings_ethernet</i>
                  <span class="sm-left sm-right" {% if dateTypeCookie != 's' %}style="display:none"{% endif %}>{{ 'activities.self_date_type'|trans }}</span>
                  <i class="material-icons" {% if dateTypeCookie == 's' %}style="display:none"{% endif %}>send</i>
                  <span class="sm-left sm-right" {% if dateTypeCookie == 's' %}style="display:none"{% endif %}>{{ 'activities.output_date_type'|trans }}</span>
              </div>
              <ul class="change-date-type" data-type="{{dateTypeCookie}}">
                <i class="fa fa-caret-up"></i>
                <i class="fa fa-caret-down"></i>
              </ul>
            </a>
          </li>
          
          
          {% endif %}
        {#{% endif %}#}
      </ul>
    </div>

    <div id="activities-container">
      {% if viewTypeCookie == 'd' %} 
        <ul class="tabs tabs-fixed-width">
          {% for s, status in displayedStatuses %}
            
            {% set nbActivities = processesActivities[s]|length + orphanActivities[s]|length %}
            {% set disabledClass = nbActivities == 0 ? ' disabled' : '' %}
            {% set nbActivitiesInfo = nbActivities ? '(' ~ nbActivities ~ ')' : '' %}
            <li class="tab status-{{ status }}{{disabledClass}}">
              <a href="#{{ status }}">{{ ('activities.' ~ sortingTypeCookie ~ '_status.' ~ status)|trans }} {{ nbActivitiesInfo }}</a>
            </li>
          {% endfor %}
        </ul>
      {% else %}
        <ul class="tabs-t-view flex-center">

          {% for s, status in displayedStatuses %}
            {% set outputStatusCookie = global.request.cookies.get('r_s_' ~ sortingTypeCookie ~ '_' ~ status) %}
            
            <li class="flex-center status-selector {{ sortingTypeCookie ~'-'~ status }} {% if outputStatusCookie is null %}showable{% endif %}" data-{{sortingTypeCookie}}-status="{{ status }}">
              <div class="stage-item-button no-margin">
                <i class="material-icons white-text tooltipped to-hide" data-position="top" data-tooltip="{{ 'activities.hide_group'|trans }}" style="display: none;color:inherit!important">clear</i>
                <i class="material-icons white-text tooltipped to-show" data-position="top" data-tooltip="{{ 'activities.display_group'|trans }}" style="display: none;">check</i>
              </div>
              <span class="m-left">{{ ('activities.' ~ sortingTypeCookie ~ '_status.' ~ status)|trans }}</span>
            </li>

          {% endfor %}
        </ul>
      {% endif %}

      {% if viewTypeCookie == 'd' %}

        {% for s, status in displayedStatuses %}
          <div id="{{ status }}">
            <ul class="process-list process-list-d">
              {% if orphanActivities is not empty %}
                <li class="process-list--item hierarchized-item">
                  <header>({{ 'activities.orphans'|trans }})</header>
                  <div class="item-body">
                    <ul class="collection activity-list">
                      {% for activity in orphanActivities[s] %}
                        {% include "components/activity_list__item.html.twig" with { activity: activity } %}
                      {% endfor %}
                    </ul>
                  </div>
                </li>
              {% endif %}
              {% if processesActivities is not empty %}
                {% for process_name, processActivities in processesActivities[s] %}
                <li class="process-list--item hierarchized-item">
                  <header>{{ process_name }}</header>
                  <div class="item-body">
                    <ul class="collection activity-list">
                      {% for activity in processActivities %}
                        {% include "components/activity_list__item.html.twig" with { activity: activity } %}
                      {% endfor %}
                    </ul>
                  </div>
                </li>
                {% endfor %}
              {% endif %}

            </ul>
          </div>
        {% endfor %}

      {% else %}
        <div class="timescale">
          <div class="row no-margin date">
            <div class="col s4 dmin center no-padding"></div>
            <div class="col s3 center no-padding"></div>
            <div class="col s5 dmax center no-padding">
            </div>
          </div>
          <div class="row no-margin">
            <div class="arrow">
              <div class="col s3"> </div>
            </div>
            <i class="arr right"></i>
          </div>
          <div class="row no-padding no-margin">
            <div class="col s2"></div>
            <div class="col s10 no-padding">
              <div class="row no-padding no-margin">
                <div class="col s9 no-padding">
                  <div class="row no-padding no-margin months-ref">
                      <div class="col s1">J</div>
                      <div class="col s1">F</div>
                      <div class="col s1">M</div>
                      <div class="col s1">A</div>
                      <div class="col s1">M</div>
                      <div class="col s1">J</div>
                      <div class="col s1">J</div>
                      <div class="col s1">A</div>
                      <div class="col s1">S</div>
                      <div class="col s1">O</div>
                      <div class="col s1">N</div>
                      <div class="col s1">D</div>
                      <div class="chevron">
                        <i class="fa fa-location-arrow"></i>
                      </div>
                  </div>
                </div>
                <div class="col s3"></div>
              </div>
            </div>
          </div>
        </div>

        {#}
        {% for s, status in displayedStatuses %}
          <div id="{{ status }}">
            <ul class="process-list process-list-t no-margin">
              {% if orphanActivities is not empty %}
                <li class="process-list--item hierarchized-item">
                  <div class="row no-margin flex-center">
                    <div class="col s2 center">
                      <div class="flex-center process-detail">
                        <i class="material-icons">layers</i>
                        <span class="m-left">{{ 'activities.orphans'|trans }}</span>
                      </div>
                    </div>
                    <div class="col s10 no-padding">
                      <div class="item-body">
                        <ul class="activity-list">
                          {% for activity in orphanActivities[s] %}
                          {% if activity.getStartdate() <  date() %}
                          {% endif %}

                            {% include "components/activity2_list__item.html.twig" with { activity: activity } %}

                            {% endfor %}
                        </ul>
                      </div>
                    </div>
                  </div>
                </li>
              {% endif %}

              {% for process_name, activities in processesActivities[s] %}
                {% include "components/iprocess_list__item.html.twig" with { process_name: process_name, activities: activities } %}
              {% endfor %}
            </ul>
          </div>
        {% endfor %}
        #}

        
        <ul class="process-list process-list-t no-margin">
          {% if orphanActivities is not empty %}
            <li class="process-list--item hierarchized-item">
              <div class="row no-margin flex-center">
                <div class="col s2 center">
                  <div class="flex-center process-detail">
                    <i class="material-icons">layers</i>
                    <span class="m-left">{{ 'activities.orphans'|trans }}</span>
                  </div>
                </div>
                <div class="col s10 no-padding">
                  <div class="item-body">
                    <ul class="activity-list">
                      {% for s, status in orphanActivities %}
                        {% set actStatus = null %}
                        {% set showable = false %}
                        {% for activity in orphanActivities[s] %}
                          {% if activity.status != actStatus %}
                            {% set actStatus = sortingTypeCookie == 'o' ? activity.status : activity.progress %}
                            {% set actStatusName = actStatuses[sortingTypeCookie][actStatus] %}
                            {% set showable = global.request.cookies.get('r_s_' ~ sortingTypeCookie ~ '_' ~ actStatusName) is null %}
                          {% endif %}
                          {% include "components/activity2_list__item.html.twig" with { activity: activity, showable: showable, sortingType: sortingTypeCookie, actStatus: actStatusName } %}
                        {% endfor %}
                      {% endfor %}
                    </ul>
                  </div>
                </div>
              </div>
            </li>
          {% endif %}

          {% for process_name, processActivities in processesActivities %}
            {% set actStatus = -10 %}
            {% set showable = false %}
            <li class="process-list--item hierarchized-item">
              <div class="row no-margin flex-center">
                <div class="col s2 center">
                  <div class="flex-center process-detail">
                    <i class="material-icons">layers</i>
                    <span class="m-left">{{ process_name }}</span>
                  </div>
                </div>
                <div class="col s10 no-padding">
                  <div class="item-body">
                    <ul class="activity-list">
          
                      {% for status, processStatusActivities in processActivities %}
                        
                        {% if status != actStatus %}
                          {% set actStatus = status %}
                          {% set actStatusName = actStatuses[sortingTypeCookie][status] %}
                          {% set showable = global.request.cookies.get('r_s_' ~ sortingTypeCookie ~ '_' ~ actStatusName) is null %}
                          
                        {% endif %}

                        {% for activity in processStatusActivities %}

                          {% include "components/activity2_list__item.html.twig" with { activity: activity, showable: showable, sortingType: sortingTypeCookie, dateType: dateTypeCookie, actStatus: actStatusName } %}
                          
                        {% endfor %}
                      {% endfor %}
                    </ul>
                  </div>
                </div>
              </div>
            </li>
          {% endfor %}

        </ul>

        


              {#
              {% for process_name, activities in processesActivities[s] %}
                {% include "components/iprocess_list__item.html.twig" with { process_name: process_name, activities: activities } %}
              {% endfor %}
                
        {% endfor %}

        #}
      {% endif %}
    </div>

    {% if orphanActivities is empty and processesActivities is empty %}
      <div class="container">
        <div class="center" style="margin-top: 20px;">
            <i class="fa fa-clipboard fa-3x"></i>
            {% if currentuser.organization.commname != "Public" %}
                <h4>{% trans %}activities.no_activities_title{% endtrans %}</h4>
                <p>{% if currentuser.role == 3 %}{% trans %}activities.no_activities_msg_collaborator{% endtrans %}{% else %}{% trans %}activities.no_activities_msg_activity_manager{% endtrans %}{% endif %}</p>
            {% else %}
                <h4>{% trans %}activities.no_registered_activities_title{% endtrans %}</h4>
                <p>{% trans %}activities.no_registered_activities_msg{% endtrans %}</p>
                <a href="{{ url('displayAllInstitutions') }}" class="btn-large waves-effect waves-light teal lighten-1" style="margin:20px 0px 0px 0px">{% trans %}institutions.add_process.btn_modal{% endtrans %}</a>
            {% endif %}
        </div>
      </div>
    {% endif %}

    {% if currentuser.role != 3 %}
      <div id="fixedButton create-act-btn" class="fixed-action-btn">
          <a class="btn-floating blue darken-2 modal-trigger" href="#createActivity" onclick="onAddProcessClick('{{ currentuser.organization.id }}')" data-oid="{{currentuser.organization.id}}"><i class="material-icons">add</i></a>
          {#}
          <ul>
              <li><a class="btn-floating orange lighten-2 tooltipped modal-trigger" data-position="left" data-delay="50" data-tooltip="{% trans %}tooltip.template.create_from_scratch{% endtrans %}" href="{{ path('activityInitialisation',{'elmt' : 'template'}) }}">
                  <div style="position: relative;display:inline-block">
                      <i class="fa fa-file"></i>
                      <i class="material-icons template-pencil" style="position: absolute; top:5%; left:14%;color:orange">create</i>
                  </div>
                  </a>
              </li>
              <li><a class="btn-floating tooltipped {% if currentuser.organization.templateActivities|length == 0 %}grey{% else %} cyan darken-2 modal-trigger" href="#selectTemplate{% endif %}" data-position="left" data-delay="50" data-tooltip="{% trans %}tooltip.activity.create_from_template{% endtrans %}"><i class="material-icons">view_headline</i></a></li>
              <li><a class="btn-floating teal accent-4 tooltipped" data-position="left" data-delay="50" data-tooltip="{% trans %}tooltip.activity.create_from_scratch{% endtrans %}" href="#createActivity" onclick="onAddProcessClick('{{ currentuser.orgId }}')" data-oid="{{currentuser.orgId}}"><i class="material-icons">create</i></a></li>
          </ul>
          #}
      </div>
    {% endif %}

  </main>

  <div id="createActivity" class="modal">
      <div class="modal-content">
        <h5>{% trans %}activities.create.delegate_choice_title_msg{% endtrans %}</h5>
        <div style="margin-top: 2Opx;">
          <div id="processSelector">
              <div style="margin-bottom: 20px">{% trans %}activities.available_processes{% endtrans %}</div>
              <div class="input-field">
                <select id="processSelect"></select>
              </div>
          </div>
          <div>
              {% if currentuser.role != 1 %}
                <a class="modal-trigger" href="#requestNewProcess" onclick="onAddProcessClick('{{currentuser.organization.id}}')">
              {% else %}
                <a href="{{url('manageProcesses',{orgId: currentuser.organization.id})}}">
              {% endif %}
                  <i class="fas fa-plus modal-close"></i>
                  {% trans %} activities.request_process{% endtrans %}
              </a>
          </div>
        </div>
        {#}
        <p>{% trans %}activities.create.delegate_choice_msg{% endtrans %}</p>
        #}
      </div>
    <div class="modal-footer action-buttons">
        <div class="button-field">
          <a class="waves-effect waves-green btn final-step-btn modal-close">{% trans %}activities.create.next{% endtrans %}</a>
        </div>
    </div>
  </div>

  <div id="initializedActivity" class="modal">

    <div class="modal-content">
      <div class="flex-center">
        <a href="#createActivity" class="btn waves-effect waves-green modal-trigger modal-close">{{ 'grades.back'|trans }}</a>
        <h5 class="initialize-modal-title">{{ 'activities.create.initialize_title'|trans }}</h5>
      </div>

      <div class="elmts"></div>

      {#<p>{{ 'activities.request.initialize_modify_content'|trans }}</p>#}
      {#
      <input type="checkbox" class="filled-in" id="warn_participants" name="warn_participants" checked>
      <label for="warn_participants">{{ 'activities.request.informing_mail'|trans }}</label>
      #}
      <input type="checkbox" class="filled-in" id="delegate" name="delegate-checkbox">
      <label for="delegate">{{ 'activities.create.delegate_btn_msg'|trans }}</label>

      <div class="delegate" style="display: none;">
        {{ form_start(delegateForm) }}
            {#<p>{% trans %}activities.create.delegate_content_msg{% endtrans %}</p>#}
            <div class="input-field del-act-name" style="display: none;">
              {{ form_row(delegateForm.activityName) }}
            </div>
            <div class="input-field">
              {{ form_widget(delegateForm.activityLeader) }}
              {{ form_label(delegateForm.activityLeader) }}
            </div>

            {{ form_row(delegateForm.activityDescription) }}


            <div class="action-buttons">
                <div class="button-field">
                    {{ form_row(delegateForm.submit,{attr: {style: "margin-top:15px;"}}) }}
                </div>
            </div>
        {{ form_rest(delegateForm) }}
        {{ form_end(delegateForm) }}
      </div>

    </div>
    <div class="modal-footer action-buttons">
      {#}
      <div class="button-field">
        <button type="button" class="modal-action launch-btn btn">{{ 'activities.request.launch_btn_msg'|trans }}</button>
      </div>
      #}
      <div class="button-field">
        <button type="button" class="modal-action modify-btn button btn">{{ 'create_organization.create'|trans }}</button>
      </div>
      {#}
      <div class="button-field">
        <a class="waves-effect waves-green btn modal-trigger" href="#delegateActivity">{% trans %}activities.create.delegate_btn_msg{% endtrans %}</a>
      </div>
      #}
    </div>
  </div>

  <div id="uninitializedActivity" class="modal">
    <div class="modal-content">
      <h5>{{ 'activities.create.uninitialize_title'|trans }}</h5>
      <p>{{ 'activities.create.delegate_choice_msg'|trans }}</p>
      <div class="input-field">
        <label for="activity_name">{{ 'activities.request.name_label'|trans }}</label>
        <input type="text" id="activity_name" name="activity_name" required="required">
      </div>

    </div>
    <div class="modal-footer action-buttons">
      <div class="button-field">
        <button type="button" class="modal-action start-btn btn">{{ 'activities.create.nodelegate_btn_msg'|trans }}</button>
      </div>
      {#<div class="button-field">
        <button type="button" class="modal-action modal-close submit-button red btn">{{ 'activities.request.cancel_btn_msg'|trans }}</button>
      </div>
      #}
      <div class="button-field">
        <a class="waves-effect waves-green btn modal-trigger" href="#delegateActivity">{% trans %}activities.create.delegate_btn_msg{% endtrans %}</a>
      </div>
    </div>
  </div>

  <div id="activityInfo" class="modal" data-eid="0">
    <div class="modal-content">
      <h5>{{ 'activities.details'|trans }}</h5>
      <div class="elmts">

      </div>
    </div>
    <div class="modal-footer action-buttons">
      {#<div class="button-field">
        <button type="button" class="modal-close btn">Ok</button>
      </div>
      #}
    </div>
  </div>

  <div id="activity-validate" class="modal">
    <div class="modal-content">
      <h5>{{ 'activities.request.initialize_title'|trans }}
        -
        <span class="process-name"></span>
      </h5>
      <p>{{ 'activities.request.ask_for_add'|trans }}</p>
    </div>
    <div class="modal-footer action-buttons">
      <div class="button-field">
        <button type="button" class="modal-action start-btn btn">{{ 'activities.request.confirm_btn_msg'|trans }}</button>
      </div>
      <div class="button-field">
        <button type="button" class="modal-action modal-close submit-button red btn">{{ 'activities.request.cancel_btn_msg'|trans }}</button>
      </div>
    </div>
  </div>

  <div id="errorModal" class="modal">
    <div class="modal-content">
      <h5>{{ 'activities.modal_error_creation_title'|trans }}</h5>
      <p class="error-msg"></p>
    </div>
    <div class="modal-footer">
      <div class="action-buttons">
        <div class="button-field">
          <button type="button" class="modal-action modal-close waves-effect btn">Ok</button>
        </div>
      </div>
    </div>
  </div>

  <div id="delegateSuccess" class="modal">
    <div class="modal-content">
        <p>{% trans %}activities.create.delegate_success_msg{% endtrans %}</p>
    </div>
    <div class="modal-footer">
        <div class="button-field">
            <a class="modal-close submit-button waves-effect waves-green btn-large">{% trans %}activities.create.delegate_success_close_btn_msg{% endtrans %}</a>
        </div>
    </div>
  </div>

  <div id="chooseGradableStage" class="modal">
      <div class="modal-content">
        <h5>{% trans %}activities.select_graded_stage.choice_title_msg{% endtrans %}</h5>
        <div style="margin-top: 2Opx;">
          <div id="stageSelector">
              <div style="margin-bottom: 20px">{% trans %}activities.select_graded_stage.available_grading_stages{% endtrans %}</div>
              <select id="stageSelect" style="display: block!important; font-family: Roboto, FontAwesome; width: 65%"></select>
          </div>
        </div>
      </div>
    <div class="modal-footer action-buttons">
        <div class="button-field">
          <a class="waves-effect waves-green btn" href="{{ path('newStageGrade', { stgId: 0 }) }}">{% trans %}activities.grade{% endtrans %}</a>
        </div>
    </div>
  </div>

  <div id="requestNewProcess" class="modal">
    <div class="modal-content">
      {{ form_start(addProcessForm, {attr: {autocomplete: "off"}}) }}
          <h5>{{'institutions.add_modal_process.modal_add_title'|trans}}</h5>
          <p>{{'institutions.add_modal_process.link_to_process'|trans}}</p>
          <div>
              {{ form_row(addProcessForm.name) }}
          </div>
          <div class="input-field">
            {{ form_widget(addProcessForm.parent) }}
            {{ form_label(addProcessForm.parent) }}
          </div>

      </div>

      <div class="modal-footer action-buttons">
          <div class="button-field">
              {{ form_row(addProcessForm.submit) }}
          </div>
      </div>
      {{ form_rest(addProcessForm)}}
      {{ form_end(addProcessForm)}}
  </div>

  <div id="updateEvent" class="modal">
    <div class="modal-content">
      {{ form_start(eventForm, {attr: {autocomplete: "off"}}) }}
          <header class="flex-center-sb">
            <h5 style="display:inline-block">
            <span class="event-element-name"></span>
            <span>{{' : ' ~ 'activity_elements.events.add_event.modal_new_title'|trans}}</span>
            </h5>
            {{ form_row(eventForm.submit)|replace({'[link]' : '<i class="fa fa-check"></i>'})|raw }}
          </header>
          <p>{{'activity_elements.events.add_event.modal_msg'|trans}}</p>
          <div>
              {{ form_row(eventForm.eventType) }}
          </div>
          <div class="row no-margin">
            <a class="event-notifications-header flex-center">
              <i class="fa fa-paper-plane sm-right"></i>
              <span>{{'activity_elements.events.add_event.notify_participants'|trans}}</span>
            </a>
            <div class="event-notifications-content" style="display:none">
              <input id="partNotification" type="checkbox" class="filled-in">
              <label for="partNotification">
                {{'activity_elements.events.add_event.notify_all_participants'|trans}}
              </label>
            </div>          
          </div>

          <div class="row no-margin">
            <a class="event-dates-header flex-center">
              <i class="fa fa-calendar-alt sm-right"></i>
              <span>{{'activity_elements.events.add_event.manage_dates'|trans}}</span>
            </a>
            <div class="event-dates-content" style="display:none">
              <div class="col m12 s12 onset-date-elmt">
                  <div class="element-data">
                    <i class="fa fa-clock"></i>
                    <span>{{'activity_elements.events.add_event.onset_date'|trans }}</span>
                  </div>
                  <div class="element-input" style="display:none">
                    {{ form_label(eventForm.onsetDate) }}
                    {{ form_widget(eventForm.onsetDate) }}
                  </div>
              </div>
              <div class="col m12 s12 exp-res-date-elmt">
                  <div class="element-data">
                    <i class="fa fa-clock"></i>
                    <span>{{'activity_elements.events.add_event.exp_res_date'|trans }}</span>
                  </div>
                  <div class="element-input" style="display:none">
                    {{ form_label(eventForm.expResDate) }}
                    {{ form_widget(eventForm.expResDate) }}
                  </div>
              </div>
            </div>
          </div>

          <div class="event-action-buttons flex-center-sa">
            
              <a class="btn waves-effect waves-light insert-comment-btn">
                <i class="fa fa-comment-medical sm-right"></i>
                <span>{{ 'activity_elements.events.add_event.insert_comment'|trans }}</span>
              </a>
            
            
              <a class="btn waves-effect waves-light insert-document-btn">
                <i class="fa fa-file-medical sm-right"></i>
                <span>{{ 'activity_elements.events.add_event.insert_document'|trans }}</span>
              </a>
            
          </div>
          {#<ul class="comments" data-prototype="{% apply escape %}{% include 'components/client__item.html.twig' with { item: form.comments.vars.prototype } %}{% endapply %}">#}
          <ul class="comments" data-prototype="{{ form_widget(eventForm.comments.vars.prototype)|e('html') }}">
          {% for comment in eventForm.comments.vars.data %}
          {% endfor %}
          </ul>

          {#<ul class="documents" data-prototype="{% apply escape %}{% include 'components/client__item.html.twig' with { item: form.comments.vars.prototype } %}{% endapply %}">#}
          <ul class="documents" data-prototype="{{ form_widget(eventForm.documents.vars.prototype)|e('html') }}">
          {% for document in eventForm.documents.vars.data %}
          {% endfor %}
          </ul>

          {#}
          <div class="action-buttons">
              <div class="button-field">
                  {{ form_row(eventForm.submit) }}
              </div>
          </div>
          #}

      </div>

      {{ form_rest(eventForm)}}
      {{ form_end(eventForm)}}
  </div>

  <div id="deleteActivity" class="modal">
    <div class="modal-content">
        <p>{% trans %}activities.delete_activity_msg{% endtrans %}</p>
        {#{% else %}
            <p>{% trans %}activities.delete_activity_msg{% endtrans %}Are you sure you want to delete this activity ?</p>
        {% endif %}#}
    </div>
    <div class="modal-footer">
        <a class=" modal-action modal-close waves-effect waves-green btn delete-button">{% trans %}user_update.delete_modal.confirm{% endtrans %}</a>
        <a class=" modal-action modal-close waves-effect waves-green btn-flat red-text">{% trans %}user_update.delete_modal.decline{% endtrans %}</a>
    </div>
  </div>

  <div id="chooseGradableStage" class="modal">
    <div class="modal-content">
      <h5>{% trans %}activities.select_graded_stage.choice_title_msg{% endtrans %}</h5>
      <div style="margin-top: 2Opx;">
        <div id="stageSelector">
          <div style="margin-bottom: 20px">{% trans %}activities.select_graded_stage.available_grading_stages{% endtrans %}</div>
          <select id="stageSelect" style="display: block!important; font-family: Roboto, FontAwesome; width: 65%"></select>
        </div>
      </div>
    </div>
    <div class="modal-footer action-buttons">
      <div class="button-field">
        <a class="waves-effect waves-green btn" href="{{ path('newStageGrade', { stgId: 0 }) }}">{% trans %}activities.grade{% endtrans %}</a>
      </div>
    </div>
  </div>

  <div id="updateStageProgressStatus" class="modal">
    <div class="modal-content">
      <h5>{% trans %}activities.select_stage_status.choice_title_msg{% endtrans %}</h5>
      <div style="margin-top: 2Opx;">
        <div id="statusSelector">
          <div style="margin-bottom: 20px">{% trans %}activities.select_stage_status.available_grading_stages{% endtrans %}</div>
          <select id="progressStatusSelect">
          </select>
        </div>
      </div>
    </div>
    <div class="modal-footer action-buttons">
      <div class="button-field">
        <a class="waves-effect waves-green update-status-btn btn">{% trans %}activity_elements.update{% endtrans %}</a>
      </div>
    </div>
  </div>

  <div id="sendDataModal" class="modal">
    <div class="modal-title">
      <h5>Finaliser les réponses</h5>
    </div>
    <div class="modal-content">
      <p>Vous êtes sur le point d'envoyer vos réponses, vous ne pourrez plus les modifier après avoir confirmé.</p>
    </div>
    <div class="modal-footer">
      <a value="Confirmer" class="btn waves-effect waves-light modal-close remove-criterion " >Confirmer</a>
      <a class="waves-effect waves-light modal-close btn-flat red-text">Annuler</a>
    </div>
  </div>

  <div id="addUserProcessActivitySuccess" class="modal">
    <div class="modal-content">
      {{ 'institutions.add_user_process_activity_success_msg'|trans }}
    </div>
    <div class="modal-footer">
      <a class="modal-close btn">ok</a>
    </div>
  </div>


{% endblock content %}
